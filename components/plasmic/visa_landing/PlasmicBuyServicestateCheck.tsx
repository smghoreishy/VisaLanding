// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: nmyTYNEmJ2A5WnCGcgGrL1
// Component: YpV6bnaLfsLh

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  usePlasmicDataConfig,
  executePlasmicDataOp,
  usePlasmicDataOp
} from "@plasmicapp/react-web/lib/data-sources";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: kYndQMS-S_zb/component
import Select from "../../Select"; // plasmic-import: 6H_b-lY_Llg6/component
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput"; // plasmic-import: Vf5hntD2SZ5/codeComponent
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput"; // plasmic-import: Vf5hntD2SZ5/codeComponentHelper
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton"; // plasmic-import: bx9Xzvf5_eu/codeComponent
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources"; // plasmic-import: QWcLsAq1KdCp/codeComponent

import { useScreenVariants as useScreenVariantsbV5KpnkZ7Fg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bV5kpnkZ7-FG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic_visa_landing.module.css"; // plasmic-import: nmyTYNEmJ2A5WnCGcgGrL1/projectcss
import sty from "./PlasmicBuyServicestateCheck.module.css"; // plasmic-import: YpV6bnaLfsLh/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: pZ5JcPOId6dF/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: TFvyB5JGmM-J/icon

createPlasmicElementProxy;

export type PlasmicBuyServicestateCheck__VariantMembers = {
  remainAccountSend: "remainAccountSend";
  mobileOnlyRemainAccountSend: "mobileOnlyRemainAccountSend";
  remainAccountRecieve: "remainAccountRecieve";
};
export type PlasmicBuyServicestateCheck__VariantsArgs = {
  remainAccountSend?: SingleBooleanChoiceArg<"remainAccountSend">;
  mobileOnlyRemainAccountSend?: SingleBooleanChoiceArg<"mobileOnlyRemainAccountSend">;
  remainAccountRecieve?: SingleBooleanChoiceArg<"remainAccountRecieve">;
};
type VariantPropType = keyof PlasmicBuyServicestateCheck__VariantsArgs;
export const PlasmicBuyServicestateCheck__VariantProps =
  new Array<VariantPropType>(
    "remainAccountSend",
    "mobileOnlyRemainAccountSend",
    "remainAccountRecieve"
  );

export type PlasmicBuyServicestateCheck__ArgsType = {
  onRemainAccountSendChange?: (val: any) => void;
  onMobileOnlyRemainAccountSendChange?: (val: any) => void;
  apiUrl?: string;
  onApiUrlChange?: (val: string) => void;
  remainAccount?: string;
  onRemainAccountChange?: (val: string) => void;
};
type ArgPropType = keyof PlasmicBuyServicestateCheck__ArgsType;
export const PlasmicBuyServicestateCheck__ArgProps = new Array<ArgPropType>(
  "onRemainAccountSendChange",
  "onMobileOnlyRemainAccountSendChange",
  "apiUrl",
  "onApiUrlChange",
  "remainAccount",
  "onRemainAccountChange"
);

export type PlasmicBuyServicestateCheck__OverridesType = {
  root?: p.Flex<"div">;
  desktop?: p.Flex<"div">;
  mobile?: p.Flex<"div">;
  select?: p.Flex<typeof Select>;
  select2?: p.Flex<typeof Select>;
  input2?: p.Flex<typeof AntdInput>;
};

export interface DefaultBuyServicestateCheckProps {
  onRemainAccountSendChange?: (val: any) => void;
  onMobileOnlyRemainAccountSendChange?: (val: any) => void;
  apiUrl?: string;
  onApiUrlChange?: (val: string) => void;
  remainAccount?: string;
  onRemainAccountChange?: (val: string) => void;
  remainAccountSend?: SingleBooleanChoiceArg<"remainAccountSend">;
  mobileOnlyRemainAccountSend?: SingleBooleanChoiceArg<"mobileOnlyRemainAccountSend">;
  remainAccountRecieve?: SingleBooleanChoiceArg<"remainAccountRecieve">;
  className?: string;
}

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBuyServicestateCheck__RenderFunc(props: {
  variants: PlasmicBuyServicestateCheck__VariantsArgs;
  args: PlasmicBuyServicestateCheck__ArgsType;
  overrides: PlasmicBuyServicestateCheck__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  const [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});
  const stateSpecs: Parameters<typeof p.useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: p.generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "remainAccountSend",
        type: "writable",
        variableType: "variant",

        valueProp: "remainAccountSend",
        onChangeProp: "onRemainAccountSendChange"
      },
      {
        path: "mobileOnlyRemainAccountSend",
        type: "writable",
        variableType: "variant",

        valueProp: "mobileOnlyRemainAccountSend",
        onChangeProp: "onMobileOnlyRemainAccountSendChange"
      },
      {
        path: "select.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "germany-tahsili"
      },
      {
        path: "select2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "1000"
      },
      {
        path: "apiUrl",
        type: "writable",
        variableType: "text",

        valueProp: "apiUrl",
        onChangeProp: "onApiUrlChange"
      },
      {
        path: "remainAccountRecieve",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          $props.remainAccountRecieve
      },
      {
        path: "remainAccount",
        type: "writable",
        variableType: "text",

        valueProp: "remainAccount",
        onChangeProp: "onRemainAccountChange"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = p.useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: $queries,
    $refs
  });

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    newNomiss2: usePlasmicDataOp(
      (() => {
        try {
          return {
            sourceId: "eEwzux4yUhU3yRQgmwJYLY",
            opId: "c309b13c-f7ec-459d-bcb8-cd6067cedd74",
            userArgs: {},
            cacheKey: "plasmic.$..$..$.c309b13c-f7ec-459d-bcb8-cd6067cedd74.$.",
            invalidatedKeys: null,
            roleId: null
          };
        } catch (e) {
          if (
            e instanceof TypeError ||
            e?.plasmicType === "PlasmicUndefinedDataError"
          ) {
            return undefined;
          } else {
            throw e;
          }
        }
      })()
    )
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);
  }

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbV5KpnkZ7Fg()
  });

  return (
    <p.Stack
      as={"div"}
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      hasGap={true}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root,
        {
          [sty.rootmobileOnlyRemainAccountSend]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.rootremainAccountRecieve]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          ),
          [sty.rootremainAccountSend]: hasVariant(
            $state,
            "remainAccountSend",
            "remainAccountSend"
          ),
          [sty.rootremainAccountSend_mobileOnlyRemainAccountSend]:
            hasVariant($state, "remainAccountSend", "remainAccountSend") &&
            hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            )
        }
      )}
    >
      <div
        data-plasmic-name={"desktop"}
        data-plasmic-override={overrides.desktop}
        className={classNames(projectcss.all, sty.desktop, {
          [sty.desktopmobileOnlyRemainAccountSend]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.desktopremainAccountRecieve]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          ),
          [sty.desktopremainAccountSend]: hasVariant(
            $state,
            "remainAccountSend",
            "remainAccountSend"
          )
        })}
      >
        <Button
          className={classNames("__wab_instance", sty.button__hosxw, {
            [sty.buttonmobileOnlyRemainAccountSend__hosxwUteC]: hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            ),
            [sty.buttonremainAccountRecieve__hosxwicO4O]: hasVariant(
              $state,
              "remainAccountRecieve",
              "remainAccountRecieve"
            ),
            [sty.buttonremainAccountSend__hosxwGcWUz]: hasVariant(
              $state,
              "remainAccountSend",
              "remainAccountSend"
            )
          })}
          color={
            hasVariant($state, "remainAccountRecieve", "remainAccountRecieve")
              ? "green"
              : hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                )
              ? "green"
              : hasVariant($state, "remainAccountSend", "remainAccountSend")
              ? "green"
              : "white"
          }
          onClick={async event => {
            const $steps = {};
            $steps["updateRemainAccount"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "remainAccountSend",
                    operation: 6,
                    value: "remainAccountSend"
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, false);
                    return false;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateRemainAccount"] === "object" &&
              typeof $steps["updateRemainAccount"].then === "function"
            ) {
              $steps["updateRemainAccount"] = await $steps[
                "updateRemainAccount"
              ];
            }
            $steps["updateMobileOnlyRemainAccountSend"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "mobileOnlyRemainAccountSend",
                    operation: 6
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, false);
                    return false;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateMobileOnlyRemainAccountSend"] === "object" &&
              typeof $steps["updateMobileOnlyRemainAccountSend"].then ===
                "function"
            ) {
              $steps["updateMobileOnlyRemainAccountSend"] = await $steps[
                "updateMobileOnlyRemainAccountSend"
              ];
            }
            $steps["updateRemainAccountRecieve"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "remainAccountRecieve",
                    operation: 6
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, false);
                    return false;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateRemainAccountRecieve"] === "object" &&
              typeof $steps["updateRemainAccountRecieve"].then === "function"
            ) {
              $steps["updateRemainAccountRecieve"] = await $steps[
                "updateRemainAccountRecieve"
              ];
            }
          }}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__jvvBn,
              {
                [sty.textmobileOnlyRemainAccountSend__jvvBnUteC]: hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                ),
                [sty.textremainAccountSend__jvvBnGcWUz]: hasVariant(
                  $state,
                  "remainAccountSend",
                  "remainAccountSend"
                )
              }
            )}
          >
            {"\u062e\u0631\u06cc\u062f \u0633\u0631\u0648\u06cc\u0633"}
          </div>
        </Button>
        <Button
          className={classNames("__wab_instance", sty.button___7VEu, {
            [sty.buttonmobileOnlyRemainAccountSend___7VEuUteC]: hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            ),
            [sty.buttonremainAccountRecieve___7VEuicO4O]: hasVariant(
              $state,
              "remainAccountRecieve",
              "remainAccountRecieve"
            ),
            [sty.buttonremainAccountSend___7VEuGcWUz]: hasVariant(
              $state,
              "remainAccountSend",
              "remainAccountSend"
            )
          })}
          color={
            hasVariant($state, "remainAccountRecieve", "remainAccountRecieve")
              ? "white"
              : hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                )
              ? "white"
              : hasVariant($state, "remainAccountSend", "remainAccountSend")
              ? "white"
              : "green"
          }
          onClick={async event => {
            const $steps = {};
            $steps["updateRemainAccount"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "remainAccountSend",
                    operation: 4,
                    value: "remainAccountSend"
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, true);
                    return true;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateRemainAccount"] === "object" &&
              typeof $steps["updateRemainAccount"].then === "function"
            ) {
              $steps["updateRemainAccount"] = await $steps[
                "updateRemainAccount"
              ];
            }
          }}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__mD3J5,
              {
                [sty.textmobileOnlyRemainAccountSend__mD3J5UteC]: hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                ),
                [sty.textremainAccountSend__mD3J5GcWUz]: hasVariant(
                  $state,
                  "remainAccountSend",
                  "remainAccountSend"
                )
              }
            )}
          >
            {
              "\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0648\u0636\u0639\u06cc\u062a \u062d\u0633\u0627\u0628"
            }
          </div>
        </Button>
      </div>
      <div
        data-plasmic-name={"mobile"}
        data-plasmic-override={overrides.mobile}
        className={classNames(projectcss.all, sty.mobile, {
          [sty.mobilemobileOnlyRemainAccountSend]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.mobileremainAccountSend]: hasVariant(
            $state,
            "remainAccountSend",
            "remainAccountSend"
          )
        })}
      >
        <Button
          className={classNames("__wab_instance", sty.button__bIpgh, {
            [sty.buttonmobileOnlyRemainAccountSend__bIpghUteC]: hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            ),
            [sty.buttonremainAccountSend__bIpghGcWUz]: hasVariant(
              $state,
              "remainAccountSend",
              "remainAccountSend"
            )
          })}
          color={
            hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            )
              ? "green"
              : hasVariant($state, "remainAccountSend", "remainAccountSend")
              ? "green"
              : "white"
          }
          onClick={async event => {
            const $steps = {};
            $steps["updateMobileOnlyRemainAccount"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "mobileOnlyRemainAccountSend",
                    operation: 6
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, false);
                    return false;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateMobileOnlyRemainAccount"] === "object" &&
              typeof $steps["updateMobileOnlyRemainAccount"].then === "function"
            ) {
              $steps["updateMobileOnlyRemainAccount"] = await $steps[
                "updateMobileOnlyRemainAccount"
              ];
            }
          }}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kFnze,
              {
                [sty.textmobileOnlyRemainAccountSend__kFnzeUteC]: hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                ),
                [sty.textremainAccountSend__kFnzeGcWUz]: hasVariant(
                  $state,
                  "remainAccountSend",
                  "remainAccountSend"
                )
              }
            )}
          >
            {"\u062e\u0631\u06cc\u062f \u0633\u0631\u0648\u06cc\u0633"}
          </div>
        </Button>
        <Button
          className={classNames("__wab_instance", sty.button__qdW0P, {
            [sty.buttonmobileOnlyRemainAccountSend__qdW0PUteC]: hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            ),
            [sty.buttonremainAccountSend__qdW0PGcWUz]: hasVariant(
              $state,
              "remainAccountSend",
              "remainAccountSend"
            )
          })}
          color={
            hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            )
              ? "white"
              : hasVariant($state, "remainAccountSend", "remainAccountSend")
              ? "white"
              : "green"
          }
          onClick={async event => {
            const $steps = {};
            $steps["updateMobileOnlyRemainAccount"] = true
              ? (() => {
                  const actionArgs = {
                    vgroup: "mobileOnlyRemainAccountSend",
                    operation: 4
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, true);
                    return true;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["updateMobileOnlyRemainAccount"] === "object" &&
              typeof $steps["updateMobileOnlyRemainAccount"].then === "function"
            ) {
              $steps["updateMobileOnlyRemainAccount"] = await $steps[
                "updateMobileOnlyRemainAccount"
              ];
            }
          }}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___9Nbdf,
              {
                [sty.textmobileOnlyRemainAccountSend___9NbdfUteC]: hasVariant(
                  $state,
                  "mobileOnlyRemainAccountSend",
                  "mobileOnlyRemainAccountSend"
                ),
                [sty.textremainAccountSend___9NbdfGcWUz]: hasVariant(
                  $state,
                  "remainAccountSend",
                  "remainAccountSend"
                )
              }
            )}
          >
            {
              "\u0627\u0633\u062a\u0639\u0644\u0627\u0645 \u0648\u0636\u0639\u06cc\u062a \u062d\u0633\u0627\u0628"
            }
          </div>
        </Button>
      </div>
      <div
        className={classNames(
          projectcss.all,
          projectcss.__wab_text,
          sty.text__mQBl2,
          {
            [sty.textmobileOnlyRemainAccountSend__mQBl2UteC]: hasVariant(
              $state,
              "mobileOnlyRemainAccountSend",
              "mobileOnlyRemainAccountSend"
            ),
            [sty.textremainAccountRecieve__mQBl2IcO4O]: hasVariant(
              $state,
              "remainAccountRecieve",
              "remainAccountRecieve"
            ),
            [sty.textremainAccountSend__mQBl2GcWUz]: hasVariant(
              $state,
              "remainAccountSend",
              "remainAccountSend"
            )
          }
        )}
      >
        {hasVariant(
          $state,
          "mobileOnlyRemainAccountSend",
          "mobileOnlyRemainAccountSend"
        )
          ? "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0627\u0646\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631 \u062e\u0648\u062f\u060c \u0634\u0645\u0627\u0631\u0647 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f."
          : hasVariant($state, "remainAccountSend", "remainAccountSend")
          ? "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0627\u0646\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631 \u062e\u0648\u062f\u060c \u0634\u0645\u0627\u0631\u0647 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f."
          : "\u0647\u0645\u06cc\u0646 \u062d\u0627\u0644\u0627 \u0639\u0636\u0648 \u0634\u0648\u06cc\u062f\u060c \u0628\u0647 \u0645\u062d\u0636 \u0628\u0627\u0632 \u0634\u062f\u0646 \u0633\u0627\u06cc\u062a \u0628\u0627 \u0634\u0645\u0627 \u062a\u0645\u0627\u0633 \u062e\u0648\u0627\u0647\u06cc\u0645 \u06af\u0631\u0641\u062a"}
      </div>
      {(
        hasVariant($state, "remainAccountRecieve", "remainAccountRecieve")
          ? true
          : false
      ) ? (
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text___6T1Ci,
            {
              [sty.textmobileOnlyRemainAccountSend___6T1CiUteC]: hasVariant(
                $state,
                "mobileOnlyRemainAccountSend",
                "mobileOnlyRemainAccountSend"
              ),
              [sty.textremainAccountRecieve___6T1CiicO4O]: hasVariant(
                $state,
                "remainAccountRecieve",
                "remainAccountRecieve"
              ),
              [sty.textremainAccountSend___6T1CiGcWUz]: hasVariant(
                $state,
                "remainAccountSend",
                "remainAccountSend"
              )
            }
          )}
        >
          {hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          )
            ? "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0627\u0646\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631 \u062e\u0648\u062f\u060c \u0634\u0645\u0627\u0631\u0647 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f."
            : hasVariant($state, "remainAccountSend", "remainAccountSend")
            ? "\u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u0627\u0646\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631 \u062e\u0648\u062f\u060c \u0634\u0645\u0627\u0631\u0647 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f."
            : "\u0648\u0636\u0639\u06cc\u062a \u0627\u06a9\u0627\u0646\u062a \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u062e\u0648\u0627\u0647\u062f \u0634\u062f."}
        </div>
      ) : null}
      <div
        className={classNames(projectcss.all, sty.freeBox__bqhg, "select", {
          [sty.freeBoxmobileOnlyRemainAccountSend__bqhgUteC]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.freeBoxremainAccountRecieve__bqhGicO4O]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          ),
          [sty.freeBoxremainAccountSend__bqhgGcWUz]: hasVariant(
            $state,
            "remainAccountSend",
            "remainAccountSend"
          )
        })}
      >
        <Select
          data-plasmic-name={"select"}
          data-plasmic-override={overrides.select}
          className={classNames("__wab_instance", sty.select)}
          onChange={(...eventArgs) => {
            p.generateStateOnChangeProp($state, ["select", "value"])(
              eventArgs[0]
            );
          }}
          options={(() => {
            const __composite = [
              { value: null, label: null },
              { value: null, label: null },
              { value: null, label: null },
              { value: null, label: null },
              { value: null, label: null },
              { value: null, label: null }
            ];
            __composite["0"]["value"] = "germany-tahsili";
            __composite["0"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u062a\u062d\u0635\u06cc\u0644\u06cc \u0622\u0644\u0645\u0627\u0646";
            __composite["1"]["value"] = "germany-schengen";
            __composite["1"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u0634\u0646\u06af\u0646 \u0622\u0644\u0645\u0627\u0646";
            __composite["2"]["value"] = "germany-legal";
            __composite["2"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u0644\u06af\u0627\u0644 \u0622\u0644\u0645\u0627\u0646";
            __composite["3"]["value"] = "italy-tahsili";
            __composite["3"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u062a\u062d\u0635\u06cc\u0644\u06cc \u0627\u06cc\u062a\u0627\u0644\u06cc\u0627";
            __composite["4"]["value"] = "italy-schengen";
            __composite["4"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u0634\u0646\u06af\u0646 \u0627\u06cc\u062a\u0627\u0644\u06cc\u0627";
            __composite["5"]["value"] = "italy-melli";
            __composite["5"]["label"] =
              "\u0648\u06cc\u0632\u0627\u06cc \u0645\u0644\u06cc \u0627\u06cc\u062a\u0627\u0644\u06cc\u0627";
            return __composite;
          })()}
          value={p.generateStateValueProp($state, ["select", "value"])}
        />
      </div>
      <div
        className={classNames(projectcss.all, sty.freeBox__tqRAb, "select", {
          [sty.freeBoxmobileOnlyRemainAccountSend__tqRAbUteC]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.freeBoxremainAccountRecieve__tqRAbicO4O]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          ),
          [sty.freeBoxremainAccountSend__tqRAbGcWUz]: hasVariant(
            $state,
            "remainAccountSend",
            "remainAccountSend"
          )
        })}
      >
        <Select
          data-plasmic-name={"select2"}
          data-plasmic-override={overrides.select2}
          className={classNames("__wab_instance", sty.select2)}
          onChange={(...eventArgs) => {
            p.generateStateOnChangeProp($state, ["select2", "value"])(
              eventArgs[0]
            );
          }}
          options={(() => {
            const __composite = [
              { value: null, label: null },
              { value: null, label: null }
            ];
            __composite["0"]["value"] = "1000";
            __composite["0"]["label"] =
              "\u06cc\u06a9 \u0645\u0627\u0647\u0647 - \u06f1\u06f0\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646";
            __composite["1"]["value"] = "60";
            __composite["1"]["label"] =
              "\u062f\u0648 \u0645\u0627\u0647\u0647 - \u06f1\u06f7\u06f0 \u0647\u0632\u0627\u0631 \u062a\u0648\u0645\u0627\u0646";
            return __composite;
          })()}
          value={p.generateStateValueProp($state, ["select2", "value"])}
        />
      </div>
      <div
        className={classNames(projectcss.all, sty.freeBox__yZrMi, {
          [sty.freeBoxmobileOnlyRemainAccountSend__yZrMiUteC]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.freeBoxremainAccountRecieve__yZrMIicO4O]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          )
        })}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__vMy9Q,
            {
              [sty.textremainAccountRecieve__vMy9QicO4O]: hasVariant(
                $state,
                "remainAccountRecieve",
                "remainAccountRecieve"
              )
            }
          )}
        >
          {
            " \u0634\u0645\u0627\u0631\u0647 \u0645\u0648\u0628\u0627\u06cc\u0644 "
          }
        </div>
        {(() => {
          const child$Props = {
            className: classNames("__wab_instance", sty.input2, {
              [sty.input2mobileOnlyRemainAccountSend]: hasVariant(
                $state,
                "mobileOnlyRemainAccountSend",
                "mobileOnlyRemainAccountSend"
              )
            }),
            onChange: p.generateStateOnChangePropForCodeComponents(
              $state,
              "value",
              ["input2", "value"],
              AntdInput_Helpers
            ),
            placeholder: ``,
            value: p.generateStateValueProp($state, ["input2", "value"])
          };
          p.initializeCodeComponentStates(
            $state,
            [
              {
                name: "value",
                plasmicStateName: "input2.value"
              }
            ],
            [],
            AntdInput_Helpers ?? {},
            child$Props
          );

          return (
            <AntdInput
              data-plasmic-name={"input2"}
              data-plasmic-override={overrides.input2}
              {...child$Props}
            />
          );
        })()}
      </div>
      <AntdButton
        className={classNames("__wab_instance", sty.button___2XtCb, {
          [sty.buttonmobileOnlyRemainAccountSend___2XtCbUteC]: hasVariant(
            $state,
            "mobileOnlyRemainAccountSend",
            "mobileOnlyRemainAccountSend"
          ),
          [sty.buttonremainAccountRecieve___2XtCbicO4O]: hasVariant(
            $state,
            "remainAccountRecieve",
            "remainAccountRecieve"
          )
        })}
        onClick={async () => {
          const $steps = {};
          $steps["runCode"] =
            !$state.remainAccountSend && !$state.mobileOnlyRemainAccountSend
              ? (() => {
                  const actionArgs = {
                    customFunction: async () => {
                      return (() => {
                        const axios = require("axios");
                        function toEnglishDigits(str) {
                          var e = "۰".charCodeAt(0);
                          str = str.replace(/[۰-۹]/g, function (t) {
                            return t.charCodeAt(0) - e;
                          });
                          e = "٠".charCodeAt(0);
                          str = str.replace(/[٠-٩]/g, function (t) {
                            return t.charCodeAt(0) - e;
                          });
                          return str;
                        }
                        const inputPhone = toEnglishDigits($state.input2.value);
                        const webhookUrl =
                          "https://n8n.bot.inbeet.tech/webhook/a472de4c-8f6f-4eeb-b92f-6ce77dc77e48";
                        const queryParams = {
                          phone_number: inputPhone,
                          service: $state.select.value,
                          cost: $state.select2.value
                        };
                        return axios
                          .get(webhookUrl, { params: queryParams })
                          .then(response => {
                            console.log(
                              "Updated value of $state.apiUrl:",
                              $state.apiUrl
                            );
                            $state.apiUrl = String(response.data);
                          })
                          .catch(error => {
                            console.error("Error calling webhook:", error);
                          });
                      })();
                    }
                  };
                  return (({ customFunction }) => {
                    return customFunction();
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            typeof $steps["runCode"] === "object" &&
            typeof $steps["runCode"].then === "function"
          ) {
            $steps["runCode"] = await $steps["runCode"];
          }
          $steps["runCode"] =
            !$state.remainAccountSend && !$state.mobileOnlyRemainAccountSend
              ? (() => {
                  const actionArgs = {
                    customFunction: async () => {
                      return window.open($state.apiUrl);
                    }
                  };
                  return (({ customFunction }) => {
                    return customFunction();
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            typeof $steps["runCode"] === "object" &&
            typeof $steps["runCode"].then === "function"
          ) {
            $steps["runCode"] = await $steps["runCode"];
          }
          $steps["updateInput2Value"] =
            !$state.remainAccountSend && !$state.mobileOnlyRemainAccountSend
              ? (() => {
                  const actionArgs = {
                    variable: {
                      objRoot: $state,
                      variablePath: ["input2", "value"]
                    },
                    operation: 0
                  };
                  return (({ variable, value, startIndex, deleteCount }) => {
                    if (!variable) {
                      return;
                    }
                    const { objRoot, variablePath } = variable;

                    p.set(objRoot, variablePath, value);
                    return value;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            typeof $steps["updateInput2Value"] === "object" &&
            typeof $steps["updateInput2Value"].then === "function"
          ) {
            $steps["updateInput2Value"] = await $steps["updateInput2Value"];
          }
          $steps["runCode"] =
            $state.remainAccountSend || $state.mobileOnlyRemainAccountSend
              ? (() => {
                  const actionArgs = {
                    customFunction: async () => {
                      return (() => {
                        const axios = require("axios");
                        function toEnglishDigits(str) {
                          var e = "۰".charCodeAt(0);
                          str = str.replace(/[۰-۹]/g, function (t) {
                            return t.charCodeAt(0) - e;
                          });
                          e = "٠".charCodeAt(0);
                          str = str.replace(/[٠-٩]/g, function (t) {
                            return t.charCodeAt(0) - e;
                          });
                          return str;
                        }
                        const inputPhone = toEnglishDigits($state.input2.value);
                        const webhookUrl =
                          "https://n8n.bot.inbeet.tech/webhook-test/439f6343-d22a-4f9f-93e3-1cc717e5dc18";
                        const queryParams = { phone_number: inputPhone };
                        return axios
                          .get(webhookUrl, { params: queryParams })
                          .then(response => {
                            console.log(
                              "Updated value of $state.apiUrl:",
                              $state.remainAccount
                            );
                            $state.remainAccount = String(response.data);
                          })
                          .catch(error => {
                            console.error("Error calling webhook:", error);
                          });
                      })();
                    }
                  };
                  return (({ customFunction }) => {
                    return customFunction();
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            typeof $steps["runCode"] === "object" &&
            typeof $steps["runCode"].then === "function"
          ) {
            $steps["runCode"] = await $steps["runCode"];
          }
          $steps["updateRemainAccountRecieve"] =
            $state.remainAccountSend || $state.mobileOnlyRemainAccountSend
              ? (() => {
                  const actionArgs = {
                    vgroup: "remainAccountRecieve",
                    operation: 4
                  };
                  return (({ vgroup, value }) => {
                    if (typeof value === "string") {
                      value = [value];
                    }

                    p.set($state, vgroup, true);
                    return true;
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
          if (
            typeof $steps["updateRemainAccountRecieve"] === "object" &&
            typeof $steps["updateRemainAccountRecieve"].then === "function"
          ) {
            $steps["updateRemainAccountRecieve"] = await $steps[
              "updateRemainAccountRecieve"
            ];
          }
          $steps["updateRemainAccountSend"] = true
            ? (() => {
                const actionArgs = {
                  vgroup: "remainAccountSend",
                  operation: 6
                };
                return (({ vgroup, value }) => {
                  if (typeof value === "string") {
                    value = [value];
                  }

                  p.set($state, vgroup, false);
                  return false;
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            typeof $steps["updateRemainAccountSend"] === "object" &&
            typeof $steps["updateRemainAccountSend"].then === "function"
          ) {
            $steps["updateRemainAccountSend"] = await $steps[
              "updateRemainAccountSend"
            ];
          }
          $steps["updateMobileOnlyRemainAccountSend"] = true
            ? (() => {
                const actionArgs = {
                  vgroup: "mobileOnlyRemainAccountSend",
                  operation: 6
                };
                return (({ vgroup, value }) => {
                  if (typeof value === "string") {
                    value = [value];
                  }

                  p.set($state, vgroup, false);
                  return false;
                })?.apply(null, [actionArgs]);
              })()
            : undefined;
          if (
            typeof $steps["updateMobileOnlyRemainAccountSend"] === "object" &&
            typeof $steps["updateMobileOnlyRemainAccountSend"].then ===
              "function"
          ) {
            $steps["updateMobileOnlyRemainAccountSend"] = await $steps[
              "updateMobileOnlyRemainAccountSend"
            ];
          }
        }}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__wH0Eo
          )}
          onClick={async event => {
            const $steps = {};
            $steps["runCode"] = true
              ? (() => {
                  const actionArgs = {
                    customFunction: async () => {
                      return (() => {
                        const axios = require("axios");
                        const webhookUrl =
                          "https://n8n.bot.inbeet.tech/webhook/d9e65266-6f16-461f-a88c-fcd592f06296";
                        const queryParams = {
                          phone_number: $state.phone.value
                        };
                        return axios
                          .get(webhookUrl, { params: queryParams })
                          .then(response => {
                            console.log(
                              "Updated value of $state.answer.value:",
                              $state.apiAnswer
                            );
                            $state.apiAnswer = String(response.data);
                          })
                          .catch(error => {
                            console.error("Error calling webhook:", error);
                          });
                      })();
                    }
                  };
                  return (({ customFunction }) => {
                    return customFunction();
                  })?.apply(null, [actionArgs]);
                })()
              : undefined;
            if (
              typeof $steps["runCode"] === "object" &&
              typeof $steps["runCode"].then === "function"
            ) {
              $steps["runCode"] = await $steps["runCode"];
            }
          }}
        >
          {"\u062b\u0628\u062a"}
        </div>
      </AntdButton>
    </p.Stack>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "desktop", "mobile", "select", "select2", "input2"],
  desktop: ["desktop"],
  mobile: ["mobile"],
  select: ["select"],
  select2: ["select2"],
  input2: ["input2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  desktop: "div";
  mobile: "div";
  select: typeof Select;
  select2: typeof Select;
  input2: typeof AntdInput;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicBuyServicestateCheck__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicBuyServicestateCheck__VariantsArgs;
    args?: PlasmicBuyServicestateCheck__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicBuyServicestateCheck__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicBuyServicestateCheck__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicBuyServicestateCheck__ArgProps,
          internalVariantPropNames: PlasmicBuyServicestateCheck__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBuyServicestateCheck__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBuyServicestateCheck";
  } else {
    func.displayName = `PlasmicBuyServicestateCheck.${nodeName}`;
  }
  return func;
}

export const PlasmicBuyServicestateCheck = Object.assign(
  // Top-level PlasmicBuyServicestateCheck renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    desktop: makeNodeComponent("desktop"),
    mobile: makeNodeComponent("mobile"),
    select: makeNodeComponent("select"),
    select2: makeNodeComponent("select2"),
    input2: makeNodeComponent("input2"),

    // Metadata about props expected for PlasmicBuyServicestateCheck
    internalVariantProps: PlasmicBuyServicestateCheck__VariantProps,
    internalArgProps: PlasmicBuyServicestateCheck__ArgProps
  }
);

export default PlasmicBuyServicestateCheck;
/* prettier-ignore-end */
